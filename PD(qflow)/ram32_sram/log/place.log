Qflow placement logfile created on Sat Nov 30 10:31:24 AM IST 2024
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/neel/ram2/synthesis/ram32_sram.blif  --lef  /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef --cel /home/neel/ram2/layout/ram32_sram.cel 
Opened BLIF file (/home/neel/ram2/synthesis/ram32_sram.blif) for reading ...
Opened CEL file (/home/neel/ram2/layout/ram32_sram.cel) for writing...
Loaded /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef file for reading...
1st pass of blif file /home/neel/ram2/synthesis/ram32_sram.blif. . .
Reading macros and/or technology data from LEF file. . .
LEF file specifies route layer Y pitch as 1
LEF file specifies route layer X pitch as 0.8
Parsing macro AND2X2
Parsing macro AOI21X1
Parsing macro AOI22X1
Parsing macro BUFX2
Parsing macro BUFX4
Parsing macro DFFPOSX1
Parsing macro INVX1
Parsing macro INVX2
Parsing macro INVX4
Parsing macro INVX8
Parsing macro NAND2X1
Parsing macro NOR2X1
Parsing macro OAI21X1
Parsing macro OR2X2
Parsing macro MUX2X1
Parsing macro CLKBUF1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
No ram32_sram.cel1 file found for project. . . no partial blockages to apply to layout.
No ram32_sram.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  ram32_sram

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


----------------------------
Total stdcells     :1224
Total cell width   :5.86e+05
Total cell height  :1.22e+06
Total cell area    :5.86e+08
Total core area    :5.86e+08
Average cell height:1.00e+03


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Splitting ram32_sram.cel into ram32_sram.scel and ram32_sram.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  281
 tracks = 256 at attempts =  1000
 tracks = 253 at attempts =  2000
 tracks = 252 at attempts =  3000
 tracks = 248 at attempts =  4000
 tracks = 246 at attempts =  5000
 tracks = 244 at attempts =  6000
 tracks = 244 at attempts =  7000
 tracks = 244 at attempts =  8000
 tracks = 244 at attempts =  9000
 tracks = 244 at attempts = 10000
 tracks = 243 at attempts = 11000
 tracks = 243 at attempts = 12000
 tracks = 243 at attempts = 13000
 tracks = 243 at attempts = 14000
 tracks = 243 at attempts = 15000
 tracks = 243 at attempts = 16000
 tracks = 243 at attempts = 17000
 tracks = 243 at attempts = 18000
 tracks = 243 at attempts = 19000
 tracks = 243 at attempts = 20000
 tracks = 243 at attempts = 21000
 tracks = 243 at attempts = 22000
 tracks = 243 at attempts = 23000
 tracks = 243 at attempts = 24000
 tracks = 243 at attempts = 25000
 tracks = 243 at attempts = 26000
 tracks = 243 at attempts = 27000
 tracks = 243 at attempts = 28000
 tracks = 243 at attempts = 29000
 tracks = 243 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  279
 tracks = 252 at attempts =  1000
 tracks = 246 at attempts =  2000
 tracks = 246 at attempts =  3000
 tracks = 245 at attempts =  4000
 tracks = 243 at attempts =  5000
 tracks = 242 at attempts =  6000
 tracks = 242 at attempts =  7000
 tracks = 242 at attempts =  8000
 tracks = 241 at attempts =  9000
 tracks = 241 at attempts = 10000
 tracks = 241 at attempts = 11000
 tracks = 241 at attempts = 12000
 tracks = 241 at attempts = 13000
 tracks = 241 at attempts = 14000
 tracks = 240 at attempts = 15000
 tracks = 240 at attempts = 16000
 tracks = 240 at attempts = 17000
 tracks = 240 at attempts = 18000
 tracks = 240 at attempts = 19000
 tracks = 240 at attempts = 20000
 tracks = 240 at attempts = 21000
 tracks = 238 at attempts = 22000
 tracks = 238 at attempts = 23000
 tracks = 238 at attempts = 24000
 tracks = 238 at attempts = 25000
 tracks = 238 at attempts = 26000
 tracks = 238 at attempts = 27000
 tracks = 238 at attempts = 28000
 tracks = 238 at attempts = 29000
 tracks = 238 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  271
 tracks = 247 at attempts =  1000
 tracks = 244 at attempts =  2000
 tracks = 241 at attempts =  3000
 tracks = 239 at attempts =  4000
 tracks = 239 at attempts =  5000
 tracks = 239 at attempts =  6000
 tracks = 238 at attempts =  7000
 tracks = 238 at attempts =  8000
 tracks = 237 at attempts =  9000
 tracks = 237 at attempts = 10000
 tracks = 237 at attempts = 11000
 tracks = 237 at attempts = 12000
 tracks = 236 at attempts = 13000
 tracks = 236 at attempts = 14000
 tracks = 236 at attempts = 15000
 tracks = 236 at attempts = 16000
 tracks = 236 at attempts = 17000
 tracks = 236 at attempts = 18000
 tracks = 236 at attempts = 19000
 tracks = 236 at attempts = 20000
 tracks = 236 at attempts = 21000
 tracks = 236 at attempts = 22000
 tracks = 236 at attempts = 23000
 tracks = 236 at attempts = 24000
 tracks = 236 at attempts = 25000
 tracks = 236 at attempts = 26000
 tracks = 236 at attempts = 27000
 tracks = 236 at attempts = 28000
 tracks = 236 at attempts = 29000
 tracks = 236 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  393
 tracks = 389 at attempts =  1000
 tracks = 389 at attempts =  2000
 tracks = 389 at attempts =  3000
 tracks = 389 at attempts =  4000
 tracks = 389 at attempts =  5000
 tracks = 389 at attempts =  6000
 tracks = 389 at attempts =  7000
 tracks = 389 at attempts =  8000
 tracks = 389 at attempts =  9000
 tracks = 389 at attempts = 10000
 tracks = 389 at attempts = 11000
 tracks = 389 at attempts = 12000
 tracks = 389 at attempts = 13000
 tracks = 389 at attempts = 14000
 tracks = 389 at attempts = 15000
 tracks = 389 at attempts = 16000
 tracks = 389 at attempts = 17000
 tracks = 389 at attempts = 18000
 tracks = 389 at attempts = 19000
 tracks = 389 at attempts = 20000
 tracks = 389 at attempts = 21000
 tracks = 389 at attempts = 22000
 tracks = 389 at attempts = 23000
 tracks = 389 at attempts = 24000
 tracks = 389 at attempts = 25000
 tracks = 389 at attempts = 26000
 tracks = 389 at attempts = 27000
 tracks = 389 at attempts = 28000
 tracks = 389 at attempts = 29000
 tracks = 389 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  278
 tracks = 251 at attempts =  1000
 tracks = 244 at attempts =  2000
 tracks = 242 at attempts =  3000
 tracks = 238 at attempts =  4000
 tracks = 238 at attempts =  5000
 tracks = 236 at attempts =  6000
 tracks = 236 at attempts =  7000
 tracks = 235 at attempts =  8000
 tracks = 235 at attempts =  9000
 tracks = 235 at attempts = 10000
 tracks = 234 at attempts = 11000
 tracks = 234 at attempts = 12000
 tracks = 234 at attempts = 13000
 tracks = 234 at attempts = 14000
 tracks = 234 at attempts = 15000
 tracks = 234 at attempts = 16000
 tracks = 234 at attempts = 17000
 tracks = 234 at attempts = 18000
 tracks = 234 at attempts = 19000
 tracks = 234 at attempts = 20000
 tracks = 234 at attempts = 21000
 tracks = 234 at attempts = 22000
 tracks = 234 at attempts = 23000
 tracks = 234 at attempts = 24000
 tracks = 234 at attempts = 25000
 tracks = 234 at attempts = 26000
 tracks = 234 at attempts = 27000
 tracks = 234 at attempts = 28000
 tracks = 234 at attempts = 29000
 tracks = 234 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  267
 tracks = 248 at attempts =  1000
 tracks = 240 at attempts =  2000
 tracks = 239 at attempts =  3000
 tracks = 237 at attempts =  4000
 tracks = 237 at attempts =  5000
 tracks = 236 at attempts =  6000
 tracks = 236 at attempts =  7000
 tracks = 235 at attempts =  8000
 tracks = 235 at attempts =  9000
 tracks = 235 at attempts = 10000
 tracks = 235 at attempts = 11000
 tracks = 235 at attempts = 12000
 tracks = 234 at attempts = 13000
 tracks = 234 at attempts = 14000
 tracks = 234 at attempts = 15000
 tracks = 234 at attempts = 16000
 tracks = 234 at attempts = 17000
 tracks = 234 at attempts = 18000
 tracks = 234 at attempts = 19000
 tracks = 234 at attempts = 20000
 tracks = 234 at attempts = 21000
 tracks = 234 at attempts = 22000
 tracks = 234 at attempts = 23000
 tracks = 234 at attempts = 24000
 tracks = 234 at attempts = 25000
 tracks = 234 at attempts = 26000
 tracks = 234 at attempts = 27000
 tracks = 234 at attempts = 28000
 tracks = 234 at attempts = 29000
 tracks = 233 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  281
 tracks = 259 at attempts =  1000
 tracks = 250 at attempts =  2000
 tracks = 248 at attempts =  3000
 tracks = 246 at attempts =  4000
 tracks = 244 at attempts =  5000
 tracks = 244 at attempts =  6000
 tracks = 244 at attempts =  7000
 tracks = 244 at attempts =  8000
 tracks = 243 at attempts =  9000
 tracks = 243 at attempts = 10000
 tracks = 243 at attempts = 11000
 tracks = 242 at attempts = 12000
 tracks = 242 at attempts = 13000
 tracks = 242 at attempts = 14000
 tracks = 242 at attempts = 15000
 tracks = 242 at attempts = 16000
 tracks = 242 at attempts = 17000
 tracks = 242 at attempts = 18000
 tracks = 242 at attempts = 19000
 tracks = 242 at attempts = 20000
 tracks = 242 at attempts = 21000
 tracks = 242 at attempts = 22000
 tracks = 242 at attempts = 23000
 tracks = 242 at attempts = 24000
 tracks = 242 at attempts = 25000
 tracks = 242 at attempts = 26000
 tracks = 242 at attempts = 27000
 tracks = 242 at attempts = 28000
 tracks = 242 at attempts = 29000
 tracks = 242 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -239
 the longest block length is 24720
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:2   Its length is:24560
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  393
 tracks = 391 at attempts =  1000
 tracks = 390 at attempts =  2000
 tracks = 389 at attempts =  3000
 tracks = 388 at attempts =  4000
 tracks = 388 at attempts =  5000
 tracks = 388 at attempts =  6000
 tracks = 388 at attempts =  7000
 tracks = 388 at attempts =  8000
 tracks = 388 at attempts =  9000
 tracks = 388 at attempts = 10000
 tracks = 388 at attempts = 11000
 tracks = 388 at attempts = 12000
 tracks = 388 at attempts = 13000
 tracks = 388 at attempts = 14000
 tracks = 388 at attempts = 15000
 tracks = 388 at attempts = 16000
 tracks = 388 at attempts = 17000
 tracks = 388 at attempts = 18000
 tracks = 388 at attempts = 19000
 tracks = 388 at attempts = 20000
 tracks = 388 at attempts = 21000
 tracks = 388 at attempts = 22000
 tracks = 388 at attempts = 23000
 tracks = 388 at attempts = 24000
 tracks = 388 at attempts = 25000
 tracks = 388 at attempts = 26000
 tracks = 388 at attempts = 27000
 tracks = 388 at attempts = 28000
 tracks = 388 at attempts = 29000
 tracks = 388 at attempts = 30000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 233
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell to determine cell to use for fill.
getfillcell.tcl ram32_sram  /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef FILL
Using cell FILL for fill
Running place2def to translate graywolf output to DEF format.
place2def.tcl ram32_sram FILL 
Running place2def.tcl
DEF database: 100 units per micron
Limits: xbot = -535.0 ybot = -465.0 xtop = 24615.0 ytop = 24065.0
Core values: 40.0 50.0 24600.0 24050.0
Offsets: 40.0 50.0
6 routing layers
metal1: 247 vertical tracks from -3um with 1um pitch
metal2: 316 vertical tracks from -3.2um with 0.8um pitch
metal3: 247 vertical tracks from -3um with 1um pitch
metal4: 316 vertical tracks from -3.2um with 0.8um pitch
metal5: 247 vertical tracks from -3um with 1um pitch
metal6: 158 vertical tracks from -3.2um with 1.6um pitch
Summary: Total components = 1224
  Fill cells  = 0
  Other cells = 1224
Done with place2def.tcl
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  -stripe 2.0 50.0 PG ram32_sram  /usr/local/share/qflow/tech/osu018/osu018_stdcells.lef FILL
Reading FILL macros from LEF file.
Reading DEF file ram32_sram.def. . .
Number of rows is 24
Longest row has width 246.0 um
addspacers:  Inserting 4 stripes of width 1.6 um (2.0 um requested)
  Pitch 49.6 um, offset 48.0 um
stretch:  Number of components is 1459
Analysis of DEF file:
Number of components = 1224
New number of components = 1459
Number of rows = 24
Adjusting obstructions for power striping
Done with addspacers.tcl
Running arrangepins to adjust pin positions for optimal routing.
arrangepins.tcl  ram32_sram
Reading info file ram32_sram.info. . .
Reading DEF file ram32_sram.def. . .
Recalculating pin positions
Writing DEF file ram32_sram_mod.def. . .
Done with arrangepins.tcl
blifanno.tcl /home/neel/ram2/synthesis/ram32_sram.blif ram32_sram.def /home/neel/ram2/synthesis/ram32_sram_anno.blif
Running blifanno.tcl
Reading DEF file ram32_sram.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/neel/ram2/synthesis
Files:
   Verilog: /home/neel/ram2/synthesis/ram32_sram.rtl.v
   Verilog: /home/neel/ram2/synthesis/ram32_sram.rtlnopwr.v
   Verilog: /home/neel/ram2/synthesis/ram32_sram.rtlbb.v
   Spice:   /home/neel/ram2/synthesis/ram32_sram.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on Sat Nov 30 10:31:54 AM IST 2024
